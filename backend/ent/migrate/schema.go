// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"github.com/facebookincubator/ent/dialect/sql/schema"
	"github.com/facebookincubator/ent/schema/field"
)

var (
	// AbilitypatientrightsColumns holds the columns for the "abilitypatientrights" table.
	AbilitypatientrightsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "operative", Type: field.TypeInt},
		{Name: "medical_supplies", Type: field.TypeInt},
		{Name: "examine", Type: field.TypeInt},
	}
	// AbilitypatientrightsTable holds the schema information for the "abilitypatientrights" table.
	AbilitypatientrightsTable = &schema.Table{
		Name:        "abilitypatientrights",
		Columns:     AbilitypatientrightsColumns,
		PrimaryKey:  []*schema.Column{AbilitypatientrightsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// InsurancesColumns holds the columns for the "insurances" table.
	InsurancesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "insurancecompany", Type: field.TypeString, Unique: true},
	}
	// InsurancesTable holds the schema information for the "insurances" table.
	InsurancesTable = &schema.Table{
		Name:        "insurances",
		Columns:     InsurancesColumns,
		PrimaryKey:  []*schema.Column{InsurancesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// MedicalrecordstaffsColumns holds the columns for the "medicalrecordstaffs" table.
	MedicalrecordstaffsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
	}
	// MedicalrecordstaffsTable holds the schema information for the "medicalrecordstaffs" table.
	MedicalrecordstaffsTable = &schema.Table{
		Name:        "medicalrecordstaffs",
		Columns:     MedicalrecordstaffsColumns,
		PrimaryKey:  []*schema.Column{MedicalrecordstaffsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// PatientrecordsColumns holds the columns for the "patientrecords" table.
	PatientrecordsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
	}
	// PatientrecordsTable holds the schema information for the "patientrecords" table.
	PatientrecordsTable = &schema.Table{
		Name:        "patientrecords",
		Columns:     PatientrecordsColumns,
		PrimaryKey:  []*schema.Column{PatientrecordsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// PatientrightsColumns holds the columns for the "patientrights" table.
	PatientrightsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "permission_date", Type: field.TypeTime},
		{Name: "Insurance_id", Type: field.TypeInt, Nullable: true},
		{Name: "Medicalrecordstaff_id", Type: field.TypeInt, Nullable: true},
		{Name: "Patientrecord_id", Type: field.TypeInt, Nullable: true},
		{Name: "Patientrightstype_id", Type: field.TypeInt, Nullable: true},
	}
	// PatientrightsTable holds the schema information for the "patientrights" table.
	PatientrightsTable = &schema.Table{
		Name:       "patientrights",
		Columns:    PatientrightsColumns,
		PrimaryKey: []*schema.Column{PatientrightsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "patientrights_insurances_InsurancePatientrights",
				Columns: []*schema.Column{PatientrightsColumns[2]},

				RefColumns: []*schema.Column{InsurancesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "patientrights_medicalrecordstaffs_MedicalrecordstaffPatientrights",
				Columns: []*schema.Column{PatientrightsColumns[3]},

				RefColumns: []*schema.Column{MedicalrecordstaffsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "patientrights_patientrecords_PatientrecordPatientrights",
				Columns: []*schema.Column{PatientrightsColumns[4]},

				RefColumns: []*schema.Column{PatientrecordsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "patientrights_patientrightstypes_PatientrightstypePatientrights",
				Columns: []*schema.Column{PatientrightsColumns[5]},

				RefColumns: []*schema.Column{PatientrightstypesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// PatientrightstypesColumns holds the columns for the "patientrightstypes" table.
	PatientrightstypesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "permission", Type: field.TypeString},
		{Name: "permission_area", Type: field.TypeString},
		{Name: "responsible", Type: field.TypeString},
		{Name: "Abilitypatientrights_id", Type: field.TypeInt, Nullable: true},
	}
	// PatientrightstypesTable holds the schema information for the "patientrightstypes" table.
	PatientrightstypesTable = &schema.Table{
		Name:       "patientrightstypes",
		Columns:    PatientrightstypesColumns,
		PrimaryKey: []*schema.Column{PatientrightstypesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "patientrightstypes_abilitypatientrights_AbilitypatientrightsPatientrightstype",
				Columns: []*schema.Column{PatientrightstypesColumns[4]},

				RefColumns: []*schema.Column{AbilitypatientrightsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		AbilitypatientrightsTable,
		InsurancesTable,
		MedicalrecordstaffsTable,
		PatientrecordsTable,
		PatientrightsTable,
		PatientrightstypesTable,
	}
)

func init() {
	PatientrightsTable.ForeignKeys[0].RefTable = InsurancesTable
	PatientrightsTable.ForeignKeys[1].RefTable = MedicalrecordstaffsTable
	PatientrightsTable.ForeignKeys[2].RefTable = PatientrecordsTable
	PatientrightsTable.ForeignKeys[3].RefTable = PatientrightstypesTable
	PatientrightstypesTable.ForeignKeys[0].RefTable = AbilitypatientrightsTable
}
