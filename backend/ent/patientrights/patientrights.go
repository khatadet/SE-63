// Code generated by entc, DO NOT EDIT.

package patientrights

const (
	// Label holds the string label denoting the patientrights type in the database.
	Label = "patientrights"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldPermissionDate holds the string denoting the permissiondate field in the database.
	FieldPermissionDate = "permission_date"

	// EdgePatientrightsPatientrightstype holds the string denoting the patientrightspatientrightstype edge name in mutations.
	EdgePatientrightsPatientrightstype = "PatientrightsPatientrightstype"
	// EdgePatientrightsInsurance holds the string denoting the patientrightsinsurance edge name in mutations.
	EdgePatientrightsInsurance = "PatientrightsInsurance"
	// EdgePatientrightsPatientrecord holds the string denoting the patientrightspatientrecord edge name in mutations.
	EdgePatientrightsPatientrecord = "PatientrightsPatientrecord"
	// EdgePatientrightsMedicalrecordstaff holds the string denoting the patientrightsmedicalrecordstaff edge name in mutations.
	EdgePatientrightsMedicalrecordstaff = "PatientrightsMedicalrecordstaff"

	// Table holds the table name of the patientrights in the database.
	Table = "patientrights"
	// PatientrightsPatientrightstypeTable is the table the holds the PatientrightsPatientrightstype relation/edge.
	PatientrightsPatientrightstypeTable = "patientrights"
	// PatientrightsPatientrightstypeInverseTable is the table name for the Patientrightstype entity.
	// It exists in this package in order to avoid circular dependency with the "patientrightstype" package.
	PatientrightsPatientrightstypeInverseTable = "patientrightstypes"
	// PatientrightsPatientrightstypeColumn is the table column denoting the PatientrightsPatientrightstype relation/edge.
	PatientrightsPatientrightstypeColumn = "Patientrightstype_id"
	// PatientrightsInsuranceTable is the table the holds the PatientrightsInsurance relation/edge.
	PatientrightsInsuranceTable = "patientrights"
	// PatientrightsInsuranceInverseTable is the table name for the Insurance entity.
	// It exists in this package in order to avoid circular dependency with the "insurance" package.
	PatientrightsInsuranceInverseTable = "insurances"
	// PatientrightsInsuranceColumn is the table column denoting the PatientrightsInsurance relation/edge.
	PatientrightsInsuranceColumn = "Insurance_id"
	// PatientrightsPatientrecordTable is the table the holds the PatientrightsPatientrecord relation/edge.
	PatientrightsPatientrecordTable = "patientrights"
	// PatientrightsPatientrecordInverseTable is the table name for the Patientrecord entity.
	// It exists in this package in order to avoid circular dependency with the "patientrecord" package.
	PatientrightsPatientrecordInverseTable = "patientrecords"
	// PatientrightsPatientrecordColumn is the table column denoting the PatientrightsPatientrecord relation/edge.
	PatientrightsPatientrecordColumn = "Patientrecord_id"
	// PatientrightsMedicalrecordstaffTable is the table the holds the PatientrightsMedicalrecordstaff relation/edge.
	PatientrightsMedicalrecordstaffTable = "patientrights"
	// PatientrightsMedicalrecordstaffInverseTable is the table name for the Medicalrecordstaff entity.
	// It exists in this package in order to avoid circular dependency with the "medicalrecordstaff" package.
	PatientrightsMedicalrecordstaffInverseTable = "medicalrecordstaffs"
	// PatientrightsMedicalrecordstaffColumn is the table column denoting the PatientrightsMedicalrecordstaff relation/edge.
	PatientrightsMedicalrecordstaffColumn = "Medicalrecordstaff_id"
)

// Columns holds all SQL columns for patientrights fields.
var Columns = []string{
	FieldID,
	FieldPermissionDate,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the Patientrights type.
var ForeignKeys = []string{
	"Insurance_id",
	"Medicalrecordstaff_id",
	"Patientrecord_id",
	"Patientrightstype_id",
}
